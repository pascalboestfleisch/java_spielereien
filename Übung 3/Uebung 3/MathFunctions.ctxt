#BlueJ class context
comment0.target=MathFunctions
comment0.text=\r\n\ Klasse\ zum\ Berechnen\ von\ Teilsummen,\ Nullstellen\ und\ zum\ Pr\u00FCfen\ einer\ ISBN-10\r\n\ \r\n\ @author\ @pascal.boestfleisch,\ @emma.ebel\r\n\ @version\ Uebung\ 4\r\n
comment1.params=
comment1.target=MathFunctions()
comment1.text=\r\n\ Privater\ Konstruktor,\ da\ kein\ weiteres\ Objekt\ hinzugef\u00FCgt\ werden\ soll\r\n
comment2.params=zahl
comment2.target=long\ berechneTeilersumme(long)
comment2.text=\r\n\ Berechnet\ die\ Teilersumme\ von\ der\ vom\ User\ eingegebenen\ Zahl\r\n\ Die\ Methode\ wird\ bei\ negativen\ Zahlen\ abgebrochen\r\n\ i\ f\u00E4ngt\ bei\ 1\ an,\ da\ man\ nicht\ durch\ 0\ teilen\ darf\r\n\ Wenn\ i\ kleiner\ als\ die\ vom\ User\ eingegebene\ Zahl\ ist,\ wird\ i\ um\ 1\ addiert\ und\ weiter\ gerechnet\r\n\ Wenn\ der\ mod\ der\ Zahl\ und\ i\ 0\ ergibt,\ wird\ i\ auf\ den\ Wert\ der\ Summe\ addiert\ und\ somit\ erh\u00E4lt\ man\ die\ Teilersumme\r\n\ @param\ long\ zahl\ ist\ der\ vom\ User\ angegebene\ Wert,\ mit\ dem\ gerechnet\ wird\r\n\ @return\ gibt\ den\ Wert\ der\ Summe\ nach\ der\ Addition\ mit\ i\ an\r\n
comment3.params=isbn
comment3.target=java.lang.String\ berechneChecksummeIsbn(long)
comment3.text=\r\n\ Gibt\ eine\ Fehlermeldung\ bei\ falschen\ Angaben\r\n\ i\ sind\ die\ Stellen,\ mit\ denen\ gerechnet\ wird.\r\n\ Solange\ i\ gr\u00F6\u00DFer\ 0\ ist,\ wird\ i\ um\ 1\ subtrahiert\ und\ weiter\ gerechnet\r\n\ isbn\ %\ 10\ gibt\ die\ Stelle\ an,\ welche\ als\ n\u00E4chstes\ mit\ i\ multipliziert\ und\ anschlie\u00DFend\ zur\ Summe\ addiert\ wird\r\n\ isbn\ /\ 10\ bereitet\ die\ n\u00E4chste\ Stelle\ vor\r\n\ Die\ for-Schleife\ bewirkt,\ dass\ dieser\ Vorgang\ bis\ zum\ gew\u00FCnschten\ Ergebnis\ fortgef\u00FChrt\ wird\r\n\ @param\ isbn\ ist\ die\ Eingabe\ vom\ User\r\n\ @return\ gibt\ long\ als\ String\ aus\r\n
comment4.params=p\ q
comment4.target=java.lang.String\ berechneNullstellen(double,\ double)
comment4.text=\r\n\ Wenn\ die\ Diskriminante\ d\ gr\u00F6\u00DFer\ 0\ ist,\ sind\ es\ reele\ Nullstellen\r\n\ Wenn\ die\ Diskriminante\ d\ gleich\ 0\ ist,\ gibt\ es\ doppelte\ Nullstellen\r\n\ Wenn\ die\ Diskriminante\ d\ kleiner\ 0\ ist,\ sind\ dort\ komplexe\ Nullstellen\ aufzufinden\r\n\ Die\ geschriebene\ Methode\ verwendet\ die\ PQ-Formel\ zum\ Berechnen\ der\ jeweiligen\ Nullstellen\r\n\ @param\ double\ p\ steht\ f\u00FCr\ die\ erste\ Eingabe\ des\ Users\r\n\ @param\ double\ q\ steht\ f\u00FCr\ die\ zweite\ Eingabe\ des\ Users\r\n
comment5.params=zahl
comment5.target=boolean\ istSummeVonPotenzen(long)
comment6.params=zahl1\ zahl2
comment6.target=int\ berechneGgt(int,\ int)
comment6.text=\r\n\ Wenn\ zahl1\ 0\ ist,\ wird\ zahl2\ ausgegeben\ und\ umgekehrt\r\n\ Die\ groessere\ der\ beiden\ Zahlen\ wird\ durch\ die\ kleinere\ Zahl\ subtrahiert\ und\ das\ Ergebnis\ ist\ der\ ggT\r\n\ @param\ int\ zahl1\ erste\ Eingabe\ vom\ User\r\n\ @param\ int\ zahl2\ zweite\ Eingabe\ vom\ User\r\n\ @return\ zahl1\ gibt\ den\ groessten\ gemeinsamen\ Teiler\ an\r\n
comment7.params=zahl
comment7.target=long\ berechneFakultaet(int)
comment7.text=\r\n\ i\ startet\ bei\ 1\ und\ wird\ so\ lange\ erhoeht,\ bis\ sie\ die\ Zahl\ des\ Users\ entspricht.\ \r\n\ Wenn\ die\ Zahl\ 0\ ist,\ wird\ 1\ ausgegeben.\r\n\ Wenn\ nicht,\ dann\ wird\ die\ Summe\ mit\ i\ multipliziert\ um\ die\ Fakultaet\ zu\ erhalten\r\n\ @param\ int\ zahl\ ist\ die\ vom\ User\ eingegebene\ Zahl\r\n\ @return\ sum\ zeigt\ das\ Ergebnis,\ welche\ die\ Methode\ ausgerechnet\ hat\r\n
comment8.params=anzahl\ x
comment8.target=double\ berechneReihensumme(int,\ double)
numComments=9
